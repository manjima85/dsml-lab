# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vPC4QYeditCpJS9_7m-rk7HfWuZRCeir
"""

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.datasets import cifar10
from PIL import Image
import numpy as np

(X_train, y_train), (X_test, y_test) = cifar10.load_data()

X_train, X_test = X_train / 255.0, X_test / 255.0

model=keras.Sequential([
layers.Conv2D(32, (3, 3), activation='relu', input_shape=(32, 32, 3)),
layers.MaxPooling2D((2, 2)),
layers.Conv2D(64, (3, 3), activation='relu'),
layers.MaxPooling2D((2, 2)),
layers.Conv2D (64, (3, 3), activation='relu'),
layers. Flatten(),
layers. Dense (64, activation='relu'),
layers.Dense (10)
])

model.compile(optimizer='adam',
loss=tf.keras.losses.SparseCategoricalCrossentropy (from_logits=True),
metrics=['accuracy'])

model.fit(X_train, y_train, epochs=2, validation_data= (X_test, y_test))

test_loss, test_acc=model.evaluate(X_test, y_test, verbose=2)
print("\nTest accuracy: ", test_acc)

image_path='/content/new_image.jpg'
image=Image.open(image_path).resize((32,32))
image=np.array(image) / 255.0

image=np.expand_dims(image,axis=0)

predictions=model.predict(image)

predicted_class=np.argmax(predictions)

print(f'predicted class:{predicted_class}')